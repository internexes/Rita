# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
# ------------------------------------------------------------------------------
# Workflow Job 1
  build-node-9.0.0:
    docker:
      # specify the version you desire here
      - image: circleci/node:9.0.0
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 9.0.0 Build Completed"
# ------------------------------------------------------------------------------
# Workflow Job 2
  build-node-9.11.2:
    docker:
      # specify the version you desire here
      - image: circleci/node:9.11.2
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 9.11.2 Build Completed"
# ------------------------------------------------------------------------------
# Workflow Job 3
  build-node-10.9.0:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.9.0
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 10.9.0 Build Completed"
# ------------------------------------------------------------------------------
# Workflow Job 4
  build-node-10.18.0:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.18.0
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 10.18.0 Build Completed"
# ------------------------------------------------------------------------------
# Workflow Job 5
  build-node-11.9.0:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.9.0
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 11.9.0 Build Completed"
# ------------------------------------------------------------------------------
# Workflow Job 6
  build-node-11.15.0:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.15.0
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 11.15.0 Build Completed"
# ------------------------------------------------------------------------------
# Workflow Job 7
  build-node-12.9.1:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.9.1
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 12.9.1 Build Completed"
# ------------------------------------------------------------------------------
# Workflow Job 8
  build-node-12.10.0:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.10.0
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 12.10.0 Build Completed"
# ------------------------------------------------------------------------------
# Workflow Job 9
  build-node-12.14.0:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.14.0
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 12.14.0 Build Completed"
# ------------------------------------------------------------------------------
# Workflow Job 10
  build-node-13.5.0:
    docker:
      # specify the version you desire here
      - image: circleci/node:13.5.0
    working_directory: ~/repo
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run build
      - run: echo "Node.js 13.5.0 Build Completed"

workflows:
  version: 2
  build:
    jobs:
      - build-node-9.0.0
      - build-node-9.11.2:
          requires:
            - build-node-9.0.0
      - build-node-10.9.0
      - build-node-10.18.0:
          requires:
            - build-node-10.9.0
      - build-node-11.9.0
      - build-node-11.15.0:
          requires:
            - build-node-11.9.0
      - build-node-12.9.1
      - build-node-12.10.0:
          requires:
            - build-node-12.9.1
      - build-node-12.14.0:
          requires:
            - build-node-12.10.0
      - build-node-13.5.0:
          requires:
            - build-node-12.9.1
            - build-node-12.10.0
            - build-node-12.14.0
